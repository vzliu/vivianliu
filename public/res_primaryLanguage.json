{
    "basic_info": {
      "description_header": "Hi",
      "description": "ðŸ‘‹ I'm Vivian, a 4th year majoring in Computer Science at UC Berkeley and minoring in Data Science. My focus is on Frontend Development and Full-Stack Development with an interest in improving web accessibility. I'm currently looking for full-time SWE roles in California. When I'm not programming, I love hanging out with cats, running, nature, food, watching anime, reading books, drawing, and weightlifting!",
      "section_name": {
        "about": "About me",
        "projects": "Projects",
        "skills": "Skills",
        "experience": "Experience"
      }
    },
    "projects": [
      {
        "title": "Book Smart",
        "startDate": "2024",
        "description": "I designed a website that modernizes reading through a discussion forum and smart book recommendations. I built the book search feature, shelves or book collections, login page, and added support for profile data persistence. I also implemented preferences saving for smarter book recommendations from Claude and GPT APIs. The result was a functional website with increasingly tailored book recommendations as user swipes (similar to Tinder)",
        "images": [
          "images/portfolio/animal-shelter/p1.jpg",
          "images/portfolio/animal-shelter/p2.jpg"
        ],
        "url": "",
        "technologies": [
          {
            "class": "devicon-javascript-plain",
            "name": "JavaScript"
          },
          {
            "class": "devicon-react-plain",
            "name": "React"
          },
          {
            "class": "devicon-nodejs-plain",
            "name": "Node.js"
          }
        ]
      },
      {
        "title": "Voice Assistant Light Toggling",
        "startDate": "2024",
        "description": "I built a voice assistant that toggles a light through a userâ€™s voice commands using SpeechRecognition API. I also implemented functionality to speak back feedback to the user using SpeechSynthesis API on whether command was accepted or rejected.",
        "images": [
          "images/portfolio/photography/p1.jpg",
          "images/portfolio/photography/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-react-original",
            "name": "React"
          },
          {
            "class": "devicon-javascript-plain",
            "name": "JavaScript"
          }
        ]
      },
      {
        "title": "Photorealistic Renderer",
        "startDate": "2023",
        "description": "I developed a physically-based renderer using a pathtracing algorithm that generates images as .png files. I also implemented ray-scene intersection, acceleration structures, and radiometry to generate realistic images. I further improved rendering times drastically from minutes to milliseconds using a bounding volume hierarchy. I also integrated direct illumination with BSDF, zerobounce illumination, direct lighting with uniform hemisphere sampling and importance sampling lights, and recursive global illumination with Russian Roulette. I used adaptive sampling to reduce noise at the cost of performance through fixed and concentrated samples.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Predict Housing Prices",
        "startDate": "2022",
        "description": "I trained a model with linear regression to predict house sale prices in Cook County and uncover injustices. I also feature engineered a dataset, removed outliers, experimented with design matrix, and one hot encoded nonnumerical features while optimizing for low training and testing RMSE using Python, pandas, and scikit-learn.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-python-plain",
            "name": "Python"
          },
          {
            "class": "devicon-pandas-plain",
            "name": "Pandas"
          },
          {
            "class": "devicon-scikitlearn-plain",
            "name": "Sci-kit Learn"
          },
          {
            "class": "devicon-numpy-plain",
            "name": "NumPy"
          },
          {
            "class": "devicon-jupyter-plain",
            "name": "Jupyter"
          }
        ]
      },
      {
        "title": "WAYLT",
        "startDate": "2022",
        "description": "I developed a web app inspired by Spotify Wrapped and BeReal to better share songs with friends and see statistics. I also worked primarily on frontend, designed initial look/aesthetic of web app on Figma and designed logo/icons. I developed the home page, navigation bar, settings, and log in/sign up to allow users to save preferences and data.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-react-plain",
            "name": "React"
          },
          {
            "class": "devicon-nodejs-plain",
            "name": "Node.js"
          },
          {
            "class": "devicon-javascript-plain",
            "name": "JavaScript"
          }
        ]
      },
      {
        "title": "Rasterizer",
        "startDate": "2023",
        "description": "I developed a vector graphics renderer that supports .svg files and draws the resulting image into a GUI. I also designed a rasterizer with features such as drawing triangles, hierarchical transforms, and texture mapping. I programmed various anti-aliasing algorithms such as supersampling, pixel sampling, and level sampling. Also added 6 options/modes variations to the renderer: two modes for image resampling (nearest and bilinear) and 3 modes for mipmap level resampling (level zero, nearest, and linear interpolation).",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Mesh Editor",
        "startDate": "2023",
        "description": "I developed a mesh editor compatible with 3D meshes from .dae files and renders to a GUI. I programmed mesh operations such as edge flipping, edge splitting, and upsampling through loop subdivision. I also built in Bezier curves/surfaces using de Casteljau algorithm and triangle meshes using half-edge data structure. I implemented area-weighted normal vectors at vertices to allow for smoother Phong shading.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Cloth Simulator",
        "startDate": "2023",
        "description": "I implemented a real-time cloth simulation using point masses and springs with applied forces to represent movement. I also programmed cloth movement using Verlet integration to calculate new time steps and new point mass positions. I integrated support for cloth collision with different shapes and self-collisions to avoid clipping using a hash table.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Non-Photorealistic Shaders",
        "startDate": "2023",
        "description": "I programmed non-photorealistic shaders such as Cel/Toon, Voronoi, Gooch, Fresnel, and Palette. I incorporated research papers in programming of shaders and modified GUI code to support shader customizability (features include a color picker, light positioner, highlights toggle, and edge detection and thickness). I designed features such as a color picker, light positioner, highlights toggle, and edge detection and thickness. I also build the initial codebase based off a cloth simulator and reprogrammed to support .obj files for more complex models.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Non-Photorealistic Shaders",
        "startDate": "2023",
        "description": "I programmed non-photorealistic shaders such as Cel/Toon, Voronoi, Gooch, Fresnel, and Palette. I incorporated research papers in programming of shaders and modified GUI code to support shader customizability (features include a color picker, light positioner, highlights toggle, and edge detection and thickness). I designed features such as a color picker, light positioner, highlights toggle, and edge detection and thickness. I also build the initial codebase based off a cloth simulator and reprogrammed to support .obj files for more complex models.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Non-Photorealistic Shaders",
        "startDate": "2023",
        "description": "I programmed non-photorealistic shaders such as Cel/Toon, Voronoi, Gooch, Fresnel, and Palette. I incorporated research papers in programming of shaders and modified GUI code to support shader customizability (features include a color picker, light positioner, highlights toggle, and edge detection and thickness). I designed features such as a color picker, light positioner, highlights toggle, and edge detection and thickness. I also build the initial codebase based off a cloth simulator and reprogrammed to support .obj files for more complex models.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-cplusplus-plain",
            "name": "C++"
          }
        ]
      },
      {
        "title": "Legend of the Shiba: Adventure Game",
        "startDate": "2020",
        "description": "I designed and implemented a 2D tile-based world exploration engine with a pseudorandomly generated map.",
        "images": [
          "images/portfolio/adventure/p1.jpg",
          "images/portfolio/adventure/p2.jpg"
        ],
        "url": "https://github.com",
        "technologies": [
          {
            "class": "devicon-java-plain",
            "name": "Java"
          }
        ]
      }
    ],
    "experience": [
      {
        "company": "DefOpenSource",
        "title": "Front-End Developer",
        "years": "10.2019 - present",
        "mainTech": [
          "Angular 8/9/10"
        ],
        "technologies": [
          "REST API",
          "RxJS",
          "JavaScript",
          "Bootstrap",
          "MDBootstrap",
          "EF Core",
          ".NET Core",
          "SignalR",
          "Angular Material"
        ]
      },
      {
        "company": "Serros Solutions",
        "title": "Intern",
        "years": "01.2018 - 09.2019",
        "mainTech": [
          "Angular 7/8"
        ],
        "technologies": [
          "RxJS",
          "Django",
          "PHP",
          "JavaScript",
          "DHTMLX Gantt"
        ]
      }
    ]
  }